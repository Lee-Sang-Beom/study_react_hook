1. key를 쓰는 이유
   
    '''
    list.map((item, index)=>{
        return <li key={item}>{item}</li>
    })
    '''

 - 성능개선 : key 미지정 시, DOM상의 업데이트를 효율적으로 처리할 수 없음 
             (어떤 항목이 변경되고 변경되지 않았는지 모르기 때문에, 모든 항목들을 교체한 것)

             key 지정 시, DOM상의 업데이트를 효율적으로 처리할 수 있음 
             (어떤 항목이 변경되고 변경되지 않았는지 알기 때문에, 변경되지 않은 항목은 내버려두고, 변경도니 항목만 교체가능)

 - map함수의 2번째 파라미터인 index값을 key로 부여하는 것을 지양해야함
   ※ 모든 항목이 DOM상에서 비효율적으로 업데이트됨
   ※ Index값은 안정적인 값이 아님. (요소의 추가와 제거에 따라 특정 요소의 index값은 계속해서 변할 수 있기 때문에 안정적이지 않음) 

       list.map((item, index)=>{
        return (
            <div key={index}> 동적인 리스트를 만들 때, 인덱스처럼 안정적이지 못한 값을 키로 전달했기 때문에 "디버깅"이 힘들어짐
                <li>{item}</li>
                <input/>
            </div>
        )
    })


2. key가 중복되면 안되는 이유 

    '''
    // "밥먹기"로 2회 입력 시, 동일한 키가 입력되는 현상 발생
    list.map((item, index)=>{
        return <li key={item}>{item}</li>
    })
    '''

 - 오류 발생 : 리액트에서는 자녀가 복제되거나 업데이트가 이상하게 될 수 있고, 
              리액트는 이런경우 아직 완벽한 기능을 제공하고있지 않다고 함